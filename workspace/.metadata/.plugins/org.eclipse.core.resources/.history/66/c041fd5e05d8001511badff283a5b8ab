/*
 * Control.cpp
 *
 *  Created on: Feb 8, 2016
 *      Author: 1750800404
 */

#include "TeleopControl.h"

/*A Button, 1
B Button, 2
X Button, 3
Y Button, 4
L Button, 5
R Button, 6
Back, 7
Start, 8
Left Stick Button, 9
Right Stick Button 10
Left Analog X Axis, 0
Left Analog Y Axis, 1
Right Analog X Axis, 4
Right Analog Y Axis, 5
Left Trigger Axis, 2
Right Trigger Axis, 3*/

TeleopControl::TeleopControl(){

	cont1 = new Joystick(0);
	cont2 = new Joystick(1);
	l1StickButton = new JoystickButton(cont1, 8);
	l1SToggle = true;
	r1StickButton = new JoystickButton(cont1, 9);
	r1SToggle = true;
	a2Button = new JoystickButton(cont2, 1);
	a2Toggle = true;
	x2Button = new JoystickButton(cont2, 3);
	x2Toggle = true;
	y2Button = new JoystickButton(cont2, 4);
	y2Toggle = true;
	b2Button = new JoystickButton(cont2, 2);
	b2Toggle = true;
	r1Bumper = new JoystickButton(cont1, 5);
	r1Toggle = true;
	l1Bumper = new JoystickButton(cont1, 4);
	l1Toggle = true;
	start1Button = new JoystickButton(cont1, 7);
	start1Toggle = true;

	drive = new DriveSystem();
	shoot = new Shooter();

	dash = new SmartDashboard();
	sensorOverride = false;
	cameraFlip = false;

	shooting = false;

}

TeleopControl::~TeleopControl(){

	delete cont1;
	delete cont2;
	delete a2Button;
	delete b2Button;
	delete x2Button;
	delete y2Button;
	delete l1StickButton;
	delete r1StickButton;
	delete r1Bumper;
	delete l1Bumper;
	delete start1Button;
	delete drive;
	delete shoot;
	//delete dash;

}

void TeleopControl::StickDrive(){

	l1StickIn = cont1->GetRawAxis(1);
	r1StickIn = cont1->GetRawAxis(5);
	l1StickScale = pow(l1StickIn, 5);
	r1StickScale = pow(r1StickIn, 5);

	if (l1StickIn <= 0.5 && l1StickIn >= -0.5){

		drive->Drive(0, r1StickScale);

	}

	if (r1StickIn <= 0.5 && r1StickIn >= -0.5){

		drive->Drive(l1StickScale, 0);

	}

	if ((l1StickIn > 0.5 || l1StickIn < -0.5) && (r1StickIn > 0.5 || r1StickIn < -0.5)) {

		drive->Drive(l1StickScale, r1StickScale);

	}

}

void TeleopControl::ButtonControl(){

	r2TrigIn = cont2->GetRawAxis(3);
	r2TrigScale = (r2TrigIn - 0.25) * 1.33;

	if(start1Button->Get() && start1Toggle){
		start1Toggle = false;
		if(sensorOverride){
			sensorOverride = false;
		}

		else{
			sensorOverride = true;
		}

	}

	else if(start1Button->Get() == false){
		start1Toggle = true;
	}

	/*if(start1Button->Get() && sensorOverride == true){
		sensorOverride = false;
	}

	else if (start1Button->Get() && sensorOverride == false){
		sensorOverride = true;
	}*/

	if(l1StickButton->Get() && l1SToggle){
		l1SToggle = false;
		if(drive->casterLow){
			drive->RaiseCasters();
		}

		else{
			drive->LowerCasters();
		}

	}

	else if(l1StickButton->Get() == false){
		l1SToggle = true;
	}

	/*if((l1StickButton->Get() || r1StickButton->Get()) && drive->casterLow == false){

		drive->LowerCasters();

	}

	else if((l1StickButton->Get() || r1StickButton->Get()) && drive->casterLow == true){

		drive->RaiseCasters();

	}*/

	if(sensorOverride == false){

			if(a2Button->Get()){
				shoot->LowGoal(0.25, 100);
			}

			if(b2Button->Get()){
				shoot->HighGoal(0.25, 1000);
			}

			if(x2Button->Get()){
				shoot->Lower(0.25);
			}

			if(y2Button->Get()){
				shoot->Raise(0.25);
			}

			if(r2TrigIn > 0.25){
				shoot->Pickup(r2TrigScale);
			}

			if(r1Bumper->Get()){
				shoot->Shoot(5200, 5200);
			}

			if(l1Bumper->Get()){
				shoot->Shoot(4000, 4000);
			}
	}

	else if(sensorOverride == true){

				if(a2Button->Get()){
					shoot->LowerNoSense(0.25);
				}

				if(b2Button->Get()){
					shoot->RaiseNoSense(0.25);
				}

				if(r2TrigIn > 0.25){
					shoot->PickupNoSense(r2TrigScale);
				}

				/*if(r1Bumper->Get()){
					shoot->ShootNoSense(1.0, 1.0);
				}*/

				if(r1Bumper->Get() && r1Toggle){
					r1Toggle = false;
					if(shooting){
						shooting = false;
						shoot->ShootNoSense(1.0, 1.0);
					}

					else{
						shooting = true;
						shoot->ShootNoSense(1.0, 1.0);
					}

				}

				else if(r1Bumper->Get() == false){
					r1Toggle = true;
				} //Test this

				if(l1Bumper->Get()){
					shoot->ShootNoSense(0.75, 0.75);
				}

				if(l1Bumper->Get() && l1Toggle){
					l1Toggle = false;
					if(shooting){
						shooting = false;
						shoot->ShootNoSense(0.75, 0.75);
					}

					else{
						shooting = true;
						shoot->ShootNoSense(0.75, 0.75);
					}

				}

				else if(l1Bumper->Get() == false){
					l1Toggle = true;
				} //Test this
		}

}

void TeleopControl::DashPlace(){

	dash->PutNumber("Left Stick Y Raw", l1StickIn);
	dash->PutNumber("Left Stick Y Scaled", l1StickScale);
	dash->PutNumber("Right Stick Y Raw", r1StickIn);
	dash->PutNumber("Right Stick Y Scaled", r1StickScale);
	dash->PutBoolean("Casters Lowered:", drive->casterLow);
	dash->PutBoolean("Sensor Override On:", sensorOverride);
	dash->PutNumber("Pickup Trigger Raw", r2TrigIn);
	dash->PutNumber("Pickup Trigger Scale", r2TrigScale);
	dash->PutNumber("Shooter Angle", shoot->shooterAngle);

	if(shoot->shooterAngle > 90 || (sensorOverride == true && (x2Button->Get() || y2Button->Get()))){
		cameraFlip = true;
	}
	else{
		cameraFlip = false;
	}

}
